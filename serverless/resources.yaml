Resources:
  GatewayResponseDefault4XX:
    Type: 'AWS::ApiGateway::GatewayResponse'
    Properties:
      ResponseParameters:
        gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
        gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
      ResponseType: DEFAULT_4XX
      RestApiId:
        Ref: 'ApiGatewayRestApi'

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
     UserPoolName: ${self:custom.stage}-user-pool
     UsernameAttributes:
      - email
     AutoVerifiedAttributes:
      - email

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: ${self:custom.stage}-user-pool-client
      UserPoolId:
        Ref: CognitoUserPool
      ExplicitAuthFlows:
        - ADMIN_NO_SRP_AUTH
      GenerateSecret: false     

  ApiGatewayAuthorizer:
    DependsOn:
      - ApiGatewayRestApi
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: CognitoAuthorizer
      IdentitySource: method.request.header.Authorization
      RestApiId:
        Ref: ApiGatewayRestApi
      Type: COGNITO_USER_POOLS
      ProviderARNs:
        - Fn::GetAtt: [CognitoUserPool, Arn]

  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:custom.db.accsynctablename}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions: 
       - AttributeName: "Email"
         AttributeType: "S"
       - AttributeName: "CognitoId"
         AttributeType: "S"      
      KeySchema:
       - AttributeName: "Email"
         KeyType: "HASH"
      GlobalSecondaryIndexes:
       - IndexName: "CognitoId"
         KeySchema:
           - AttributeName: "CognitoId"
             KeyType: "HASH"
         Projection:
           ProjectionType: ALL

  ClientsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:custom.db.clientstablename}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
       - AttributeName: "CognitoId"
         AttributeType: "S"
       - AttributeName: "Id"
         AttributeType: "S"
      KeySchema:
       - AttributeName: "Id"
         KeyType: "HASH"
      GlobalSecondaryIndexes:
       - IndexName: "CognitoId"
         KeySchema:
          - AttributeName: "CognitoId"
            KeyType: "HASH"
         Projection:
            ProjectionType: ALL
    
  ReportsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:custom.db.reportstablename}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "Id"
          AttributeType: "S"
        - AttributeName: "ClientId"
          AttributeType: "S"
        - AttributeName: "CognitoId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        - IndexName: "ClientId"
          KeySchema:
            - AttributeName: "ClientId"
              KeyType: "HASH"
          Projection:
            ProjectionType: ALL
        - IndexName: "CognitoId-index"
          KeySchema:
            - AttributeName: "CognitoId"
              KeyType: "HASH"
          Projection:
            ProjectionType: ALL

  AccountsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:custom.db.accountstablename}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "Id"
          AttributeType: "S"
        - AttributeName: "ReportId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        - IndexName: "ReportId"
          KeySchema:
            - AttributeName: "ReportId"
              KeyType: "HASH"
          Projection:
            ProjectionType: ALL                        

  TaxCodesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:custom.db.taxcodestablename}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "Id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:custom.reportBucketName}
      AccessControl: Private


